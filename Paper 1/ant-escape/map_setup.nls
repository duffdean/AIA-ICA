patches-own [
  is-wall?
  repellent
  pheromone
  old-repellent
  old-pheromone
  antID ;;added this to see if i can figure out ants following their own trail
]

; Commence rendering the box from which the ants will escape.
to render-box
  ask patches [ set is-wall? false ]
  
  let external-xborder ((max-pxcor - box-width) / 2)
  let external-yborder ((max-pycor - box-height) / 2)

  let x1 0 + external-xborder
  let x2 0 + (max-pxcor - external-xborder)
  let y1 0 + external-yborder
  let y2 0 + (max-pycor - external-yborder)

  set-horizontal-walls x1 x2 y1 y2
  set-vertical-walls x1 x2 y1 y2
  set-exit y2
  
  render-map
end

; Render the horizontal walls of the box.
to set-horizontal-walls [x1 x2 y1 y2]
  let x x1

  while [x <= x2] [
    ask patch x y1 [ set is-wall? true ]
    ask patch x y2 [ set is-wall? true ]
    set x x + 1
  ]
end

; Render the vertical walls of the room.
to set-vertical-walls [x1 x2 y1 y2]
  let y y1

  while [y <= y2] [
    ask patch x1 y [ set is-wall? true ]
    ask patch x2 y [ set is-wall? true ]
    set y y + 1
  ]
end

; Open up an exit (currently at the north-facing wall only).
to set-exit [y]
  let x1 0 + ((max-pxcor - exit-width) / 2)
  let x2 0 + ((max-pxcor + exit-width) / 2)

  let x x1

  while [x <= x2] [
    ask patch x y [ set is-wall? false ]

    set x x + 1
  ]
end

to render-map
  ask patches [
    set repellent 0
    set pheromone 0
    
    ifelse is-wall? [
      set pcolor [0 0 0]
    ]
    [
      set pcolor [0 0 255]
    ]
  ]
end

; Generate a random colour for each patch (testing purposes only)
to randomise-map
  ask patches [
    let r random 255
    let g random 255
    let b random 255

    let c (list r g b)

    set pcolor c
  ]
end